<question>Что из перечисленного является целью программной инженерии?
<variant>Применение принципов инженерии к проектированию, разработке и сопровождению программного обеспечения.
<variant>Написание кода любой сложности.
<variant>Использование исключительно теоретических методов.
<variant>Обучение пользователей работе с ПО.
<variant>Увеличение объёма документации.

<question>Как называется раздел компьютерных наук, изучающий методы и средства построения программ?
<variant>Программная инженерия.
<variant>Системное администрирование.
<variant>Алгоритмизация.
<variant>Информационная безопасность.
<variant>Управление базами данных.

<question>Основной причиной развития программной инженерии является:
<variant>Возрастающая сложность программных продуктов.
<variant>Повышение производительности компьютеров.
<variant>Расширение сферы использования интернета.
<variant>Увеличение объёмов данных.
<variant>Развитие искусственного интеллекта.

<question>Как называется стандарт, определяющий содержание дисциплины программной инженерии?
<variant>SWEBOK.
<variant>ISO 9001.
<variant>UML.
<variant>SCRUM.
<variant>IEEE 802.

<question>Какой этап программной инженерии включает анализ и корректировку требований?
<variant>Инженерия требований.
<variant>Проектирование.
<variant>Конструирование.
<variant>Тестирование.
<variant>Сопровождение.

<question>Что включает проектирование в программной инженерии?
<variant>Определение архитектуры ПО, компонентов и их интерфейсов.
<variant>Написание программного кода.
<variant>Анализ требований.
<variant>Тестирование программного обеспечения.
<variant>Разработка маркетинговой стратегии.

<question>Что является целью тестирования программного обеспечения?
<variant>Проверка корректности выполнения ПО.
<variant>Улучшение пользовательского интерфейса.
<variant>Ускорение выполнения программы.
<variant>Анализ требований.
<variant>Создание документации.

<question>Как называется этап, направленный на минимизацию затрат на поддержку программного обеспечения?
<variant>Сопровождение.
<variant>Конструирование.
<variant>Проектирование.
<variant>Инженерия требований.
<variant>Тестирование.

<question>Какой из перечисленных процессов не относится к основным областям программной инженерии?
<variant>Управление персоналом.
<variant>Инженерия требований.
<variant>Проектирование.
<variant>Конструирование.
<variant>Тестирование.

<question>Что изучает программная инженерия?
<variant>Методы и средства построения компьютерных программ.
<variant>Исключительно тестирование программного обеспечения.
<variant>Только архитектурное проектирование.
<variant>Программирование на низкоуровневых языках.
<variant>Маркетинг и продажу ПО.

<question>Какое из следующих утверждений о программной инженерии неверно?
<variant>Она основана только на теоретических аспектах.
<variant>Включает организационные вопросы.
<variant>Определяет жизненный цикл ПО.
<variant>Применяет инженерные подходы.
<variant>Использует методы массового производства.

<question>Что является основной целью сопровождения ПО?
<variant>Минимизация затрат.
<variant>Написание нового функционала.
<variant>Улучшение дизайна.
<variant>Повышение популярности ПО.
<variant>Создание пользовательских инструкций.

<question>Какой этап связан с созданием спецификации требований?
<variant>Инженерия требований.
<variant>Тестирование.
<variant>Конструирование.
<variant>Проектирование.
<variant>Сопровождение.

<question>Какая область программной инженерии изучает архитектуру ПО?
<variant>Проектирование.
<variant>Инженерия требований.
<variant>Конструирование.
<variant>Тестирование.
<variant>Сопровождение.

<question>В каком стандарте описаны основные области программной инженерии?
<variant>SWEBOK.
<variant>SCRUM.
<variant>ISO 27001.
<variant>COBIT.
<variant>PMBOK.

<question>Какая из дисциплин не относится к вспомогательным областям программной инженерии?
<variant>Управление проектами.
<variant>Конструирование.
<variant>Экономический анализ.
<variant>Обучение пользователей.
<variant>Обеспечение качества.

<question>Что из перечисленного входит в тестирование ПО?
<variant>Проверка корректности выполнения.
<variant>Разработка требований.
<variant>Создание архитектуры.
<variant>Написание кода.
<variant>Организация пользовательского обучения.

<question>Как называется процесс определения интерфейсов компонентов ПО?
<variant>Проектирование.
<variant>Сопровождение.
<variant>Инженерия требований.
<variant>Тестирование.
<variant>Управление проектами.

<question>Что из перечисленного лучше описывает SWEBOK?
<variant>Стандарт знаний в области программной инженерии.
<variant>Методология управления проектами.
<variant>Средство автоматического тестирования.
<variant>Язык программирования.
<variant>Система управления версиями.

<question>Что определяет жизненный цикл программного обеспечения?
<variant>Программная инженерия.
<variant>Системное администрирование.
<variant>Теория алгоритмов.
<variant>Информационная безопасность.
<variant>Экономика программирования.

<question>Что из перечисленного является прикладным аспектом программной инженерии?
<variant>Решение организационных вопросов.
<variant>Разработка новых языков программирования.
<variant>Изучение машинного обучения.
<variant>Улучшение вычислительных мощностей.
<variant>Анализ сетевых протоколов.

<question>Что из перечисленного относится к задачам инженерии требований?
<variant>Анализ и корректировка требований.
<variant>Написание кода.
<variant>Тестирование производительности.
<variant>Сопровождение пользователей.
<variant>Проектирование архитектуры.

<question>Что представляет собой программная инженерия?
<variant>Система методов, средств и дисциплин для разработки, эксплуатации и сопровождения ПО.
<variant>Процесс кодирования программного обеспечения.
<variant>Методология тестирования программного обеспечения.
<variant>Управление проектами в сфере IT.
<variant>Инструмент для автоматизации разработки ПО.

<question>Каково основное назначение программной инженерии?
<variant>Обеспечение высокого качества, надежности и соответствия ПО требованиям.
<variant>Создание только прикладного программного обеспечения.
<variant>Ускорение выполнения программ.
<variant>Разработка компьютерных игр.
<variant>Оптимизация аппаратного обеспечения.

<question>Что стало причиной появления программной инженерии?
<variant>Растущая сложность программного обеспечения.
<variant>Необходимость улучшения дизайна интерфейсов.
<variant>Появление новых языков программирования.
<variant>Увеличение количества пользователей интернета.
<variant>Развитие облачных технологий.

<question>Какой термин был введен в 1960-е годы из-за проблем с разработкой программ?
<variant>"Кризис программного обеспечения".
<variant>"Программная катастрофа".
<variant>"Ошибка разработки".
<variant>"Проблемы ПО".
<variant>"Сбой системы".

<question>Что включается в жизненный цикл ПО?
<variant>Анализ требований, проектирование, разработка, тестирование, сопровождение.
<variant>Только разработка и тестирование.
<variant>Техническое обслуживание оборудования.
<variant>Производство аппаратного обеспечения.
<variant>Анализ данных.

<question>Как называется процесс выработки, анализа и корректировки требований к ПО?
<variant>Инженерия требований.
<variant>Тестирование программ.
<variant>Проектирование интерфейсов.
<variant>Кодирование.
<variant>Оптимизация ресурсов.

<question>Что включает в себя инженерия требований?
<variant>Сбор, анализ и спецификацию требований.
<variant>Разработку кода.
<variant>Процесс тестирования.
<variant>Мониторинг системных ресурсов.
<variant>Создание пользовательского интерфейса.

<question>Что является основной задачей проектирования ПО?
<variant>Определение архитектуры, компонентов и их взаимодействия.
<variant>Написание кода.
<variant>Оптимизация оборудования.
<variant>Автоматизация рабочих процессов.
<variant>Настройка серверного оборудования.

<question>Какой из перечисленных стандартов относится к процессам жизненного цикла ПО?
<variant>ISO/IEC 12207.
<variant>SWEBOK.
<variant>IEEE 830.
<variant>ITIL.
<variant>ISO 9001.

<question>Как называется процесс создания рабочей версии ПО?
<variant>Разроботка.
<variant>Проектирование.
<variant>Тестирование.
<variant>Верификация.
<variant>Анализ данных.

<question>Какова роль программной инженерии в современном мире?
<variant>Управление сложностью разработки ПО.
<variant>Изучение аппаратного обеспечения.
<variant>Продажа IT-продуктов.
<variant>Исследование искусственного интеллекта.
<variant>Обеспечение защиты данных.

<question>Что является ключевым результатом применения программной инженерии?
<variant>Высокое качество и масштабируемость ПО.
<variant>Ускорение работы процессора.
<variant>Снижение затрат на оборудование.
<variant>Создание новых протоколов связи.
<variant>Модернизация устаревших систем.

<question>Что входит в основные области программной инженерии?
<variant>Инженерия требований, проектирование, разработка, тестирование, сопровождение.
<variant>Анализ данных, статистическое моделирование, машинное обучение.
<variant>Администрирование серверов, обеспечение безопасности, интеграция сетей.
<variant>Управление проектами, маркетинг, техническая поддержка.
<variant>Оптимизация процессов, обучение сотрудников, управление финансами.

<question>Как называется документ, описывающий функциональные и нефункциональные требования?
<variant>Спецификация требований.
<variant>Руководство пользователя.
<variant>Технический отчет.
<variant>Проектная документация.
<variant>Бизнес-план.

<question>Какое утверждение об Agile является правильным?
<variant>Agile — это методология, ориентированная на итеративную разработку.
<variant>Agile — это стандарт ISO для управления проектами.
<variant>Agile — это инструмент автоматизации процессов разработки.
<variant>Agile — это язык программирования.
<variant>Agile — это метод тестирования ПО.

<question>Что обеспечивает модульное проектирование?
<variant>Управление сложностью разработки ПО.
<variant>Создание простого пользовательского интерфейса.
<variant>Увеличение скорости выполнения программ.
<variant>Снижение затрат на разработку оборудования.
<variant>Автоматизацию рабочих процессов.

<question>Как называется процесс проверки, соответствует ли ПО требованиям заказчика?
<variant>Тестирование.
<variant>Проектирование.
<variant>Кодирование.
<variant>Верификация.
<variant>Оптимизация.

<question>Что является первым этапом жизненного цикла ПО?
<variant>Анализ требований
<variant>Написание кода
<variant>Тестирование и отладка
<variant>Эксплуатация и сопровождение
<variant>Этап проектирования

<question>На каком этапе определяется цель проекта и его задачи?
<variant>Анализ требований
<variant>Написание кода
<variant>Эксплуатация и сопровождение
<variant>Тестирование и отладка
<variant>Этап проектирования

<question>Что утверждается на финальной стадии анализа требований?
<variant>Техническое задание
<variant>Код программы
<variant>Отчет об ошибках
<variant>Техническая документация
<variant>Готовый продукт

<question>Что является первым этапом жизненного цикла ПО?
<variant>Анализ требований
<variant>Написание кода
<variant>Тестирование и отладка
<variant>Эксплуатация и сопровождение
<variant>Этап проектирования

<question>На каком этапе определяется цель проекта и его задачи?
<variant>Анализ требований
<variant>Написание кода
<variant>Эксплуатация и сопровождение
<variant>Тестирование и отладка
<variant>Этап проектирования

<question>Что утверждается на финальной стадии анализа требований?
<variant>Техническое задание
<variant>Код программы
<variant>Отчет об ошибках
<variant>Техническая документация
<variant>Готовый продукт

<question>Что разрабатывается на этапе проектирования?
<variant>Архитектура системы
<variant>База данных
<variant>Исходный код
<variant>Маркетинговая стратегия
<variant>Техническая поддержка

<question>Что создается на этапе написания кода?
<variant>Прототип продукта
<variant>Маркетинговая кампания
<variant>Руководство пользователя
<variant>Техническое задание
<variant>Договор с заказчиком

<question>Что является итогом этапа написания кода?
<variant>Версия продукта для тестирования
<variant>Конечная версия документации
<variant>Создание архитектуры ПО
<variant>Утверждение бюджета
<variant>Определение требований

<question>Что включает в себя тестирование ПО?
<variant>Проверка на соответствие требованиям
<variant>Проектирование архитектуры
<variant>Написание кода
<variant>Составление бюджета
<variant>Разработка прототипа

<question>Что выполняется во время тестирования и отладки?
<variant>Устранение ошибок
<variant>Формирование технического задания
<variant>Выбор интерфейса
<variant>Создание архитектуры
<variant>Обучение пользователей

<question>Что предполагает эксплуатация ПО?
<variant>Установка и обучение пользователей
<variant>Написание технической документации
<variant>Тестирование интерфейса
<variant>Разработка спецификации
<variant>Формирование требований

<question>Какая основная цель каскадной модели?
<variant>Последовательность этапов разработки
<variant>Максимальная гибкость
<variant>Минимизация документации
<variant>Ускорение тестирования
<variant>Отсутствие багов

<question>Какие модели применяются для разработки ПО?
<variant>Agile, Waterfall, Spiral
<variant>Векторная, линейная, матричная
<variant>Аддитивная, многомерная, автономная
<variant>Модульная, контурная, гибридная
<variant>Инкрементальная, параметрическая, критическая

<question>В чем минус каскадной модели?
<variant>Трудности при внесении изменений
<variant>Отсутствие этапа тестирования
<variant>Постоянная адаптация требований
<variant>Низкая производительность команды
<variant>Высокая стоимость разработки

<question>Что означает термин "Waterfall" в контексте жизненного цикла ПО?
<variant>Последовательная модель разработки
<variant>Гибкость и возможность изменения этапов
<variant>Инкрементальная разработка
<variant>Внедрение через тестирование
<variant>Использование обратной связи с пользователем

<question>В чем заключается основной недостаток каскадной модели?
<variant>Отсутствие гибкости при изменении требований
<variant>Сложность в планировании этапов
<variant>Неопределенность в выборе технологии
<variant>Проблемы с контролем качества
<variant>Необходимость постоянного обновления документации

<question>Какой подход наиболее гибкий и позволяет быстро адаптироваться к изменениям в проекте?
<variant>Agile
<variant>Spiral Model
<variant>Waterfall
<variant>Code and Fix
<variant>V-model

<question>Какую модель разработки можно использовать для крупных и сложных проектов с высокими требованиями к безопасности и качеству?
<variant>V-model
<variant>Agile Model
<variant>Code and Fix
<variant>Waterfall
<variant>Incremental Model

<question>Что включает в себя этап проектирования ПО?
<variant>Определение архитектуры и функционала
<variant>Разработка исходного кода
<variant>Написание тестов
<variant>Определение целей и задач проекта
<variant>Формирование бюджета проекта

<question>Какую задачу решает этап анализа требований?
<variant>Определение целей и задач проекта
<variant>Написание кода
<variant>Создание тестов
<variant>Обучение пользователей
<variant>Разработка интерфейса

<question>На каком этапе происходит тестирование и отладка ПО?
<variant>Тестирование и отладка
<variant>Написание кода
<variant>Эксплуатация и сопровождение
<variant>Анализ требований
<variant>Проектирование

<question>Что включает в себя этап эксплуатации и сопровождения ПО?
<variant>Установка, обучение пользователей и поддержка
<variant>Написание и тестирование кода
<variant>Анализ требований и проектирование
<variant>Создание документации
<variant>Программирование и тестирование

<question>Какой из этапов жизненного цикла ПО является наиболее важным для успешной реализации проекта?
<variant>Анализ требований
<variant>Написание кода
<variant>Эксплуатация и сопровождение
<variant>Проектирование
<variant>Тестирование и отладка

<question>Какой подход к разработке ПО используется при постоянных изменениях требований и необходимости быстрой адаптации?
<variant>Agile Model
<variant>Waterfall
<variant>Spiral Model
<variant>V-model
<variant>Code and Fix

<question>Какую задачу решает этап тестирования и отладки ПО?
<variant>Устранение ошибок и проверка соответствия требованиям
<variant>Проектирование архитектуры системы
<variant>Обучение пользователей
<variant>Написание технической документации
<variant>Разработка кода

<question>Какую модель используют для разработки, когда важна непрерывная интеграция и постоянные улучшения?
<variant>Spiral Model
<variant>V-model
<variant>Waterfall
<variant>Incremental Model
<variant>Code and Fix

<question>Что является одним из преимуществ каскадной модели?
<variant>Простота контроля разработки
<variant>Гибкость и возможность изменений
<variant>Быстрое реагирование на баги
<variant>Быстрое внедрение изменений в проект
<variant>Низкая стоимость разработки

<question>Какой из этапов жизненного цикла ПО включает в себя создание тестов для программы?
<variant>Тестирование и отладка
<variant>Написание кода
<variant>Проектирование
<variant>Эксплуатация и сопровождение
<variant>Анализ требований

<question>Какой подход к разработке ПО имеет наибольшие сложности в случае, если требуется гибкость и частые изменения?
<variant>Waterfall Model
<variant>Spiral Model
<variant>Incremental Model
<variant>Agile Model
<variant>V-model

<question>В какой модели жизненного цикла ПО тестирование является важным элементом, который проводится одновременно с разработкой?
<variant>V-model
<variant>Waterfall
<variant>Code and Fix
<variant>Incremental Model
<variant>Spiral Model

<question>Что важно для успеха разработки ПО на этапе анализа требований?
<variant>Четкое понимание потребностей пользователей и бизнес-целей
<variant>Написание тестов и создание интерфейса
<variant>Планирование бюджета и сроков разработки
<variant>Постоянные изменения в проектировании
<variant>Интеграция сторонних библиотек

<question>Какой из подходов разработки ПО используется в условиях высокой неопределенности и необходимости частых изменений?
<variant>Agile Model
<variant>Waterfall
<variant>W-Model
<variant>V-model
<variant>Incremental Model

<question>Что является важным аспектом каскадной модели?
<variant>Четкость и последовательность этапов
<variant>Применение гибких методов управления
<variant>Непрерывное тестирование на всех этапах
<variant>Постоянная обратная связь с пользователями
<variant>Изменения в требованиях в любой момент

<question>Какой этап жизненного цикла ПО включает в себя разработку спецификации и архитектуры системы?
<variant>Этап проектирования
<variant>Тестирование и отладка
<variant>Написание кода
<variant>Анализ требований
<variant>Эксплуатация и сопровождение

<question>Какой из этапов жизненного цикла ПО является подготовительным для тестирования?
<variant>Написание кода
<variant>Эксплуатация и сопровождение
<variant>Проектирование
<variant>Тестирование и отладка
<variant>Анализ требований

<question>Какой метод разработки ПО фокусируется на тестировании на каждом этапе?
<variant>V-model
<variant>Waterfall
<variant>Incremental Model
<variant>Spiral Model
<variant>Agile Model

<question>Какой подход в разработке ПО применяется для управления большими и сложными проектами с четкими требованиями?
<variant>Waterfall
<variant>Agile
<variant>Spiral Model
<variant>Incremental Model
<variant>V-model

<question>Какую модель лучше использовать для проектов с неопределенностью в требованиях и рисках?
<variant>Spiral Model
<variant>V-model
<variant>Waterfall
<variant>Agile Model
<variant>Code and Fix

<question>Какой подход позволяет внедрять изменения на каждом этапе разработки?
<variant>Spiral Model
<variant>Incremental Model
<variant>Waterfall
<variant>V-model
<variant>Agile Model

<question>Какой этап жизненного цикла ПО посвящен устранению багов и ошибок?
<variant>Тестирование и отладка
<variant>Написание кода
<variant>Проектирование
<variant>Эксплуатация и сопровождение 
<variant>Внедрение 

<question>Что характеризует мягкий сценарий внедрения?
<variant>Взаимное доверие между заказчиком и разработчиком
<variant>Строгое регламентирование отношений
<variant>Высокий уровень конфликтов
<variant>Отказ от документации
<variant>Полное исключение рисков

<question>Какой тип проектов больше подходит для мягкого внедрения?
<variant>Проекты с небольшой продолжительностью (до 3 месяцев)
<variant>Проекты с высокой сложностью и неопределенностью
<variant>Проекты с жесткими требованиями
<variant>Проекты, исключающие использование прототипов
<variant>Проекты с длительным циклом разработки

<question>Что является результатом постановочного этапа?
<variant>Документ «Техническое задание» (ТЗ)
<variant>Готовая версия системы
<variant>Полное руководство пользователя
<variant>Финальная документация
<variant>Подписанный контракт на разработку

<question>Для чего создаются прототипы на постановочном этапе?
<variant>Для оценки рисков и поиска оптимальных решений
<variant>Для подготовки к финальному тестированию
<variant>Для обучения пользователей
<variant>Для тестирования финальной версии системы
<variant>Для анализа пользовательского интерфейса

<question>Почему прототипы не должны использоваться в разработке системы?
<variant>Они служат для нахождения оптимальных решений, но не являются оптимальными
<variant>Они содержат ошибки
<variant>Они увеличивают трудоемкость разработки
<variant>Они не соответствуют документации
<variant>Они требуют дополнительных затрат

<question>Что является условием завершения постановочного этапа?
<variant>Подписание сторонами ТЗ
<variant>Создание рабочего прототипа
<variant>Проведение аттестации пользователей
<variant>Тестирование системы
<variant>Финализация бюджета

<question>Что заменяет классическое ТЗ на уточняющем этапе?
<variant>Руководство пользователя
<variant>Соглашение о внедрении
<variant>Программа испытаний
<variant>Бизнес-модель проекта
<variant>Финансовая оценка

<question>Какую долю от общей стоимости составляет уточняющий этап?
<variant>30%
<variant>10%
<variant>20%
<variant>50%
<variant>70%

<question>Что происходит при отсутствии согласия с прототипом на уточняющем этапе?
<variant>Принимается волевое решение на уровне топ-менеджера
<variant>Проект откладывается на неопределенный срок
<variant>Требования фиксируются автоматически
<variant>Прототип отправляется на тестирование
<variant>Разработчик завершает проект

<question>Что является условием завершения стабилизирующего этапа?
<variant>Готовность системы к опытной эксплуатации
<variant>Подписание ТЗ
<variant>Завершение обучения пользователей
<variant>Тестирование финальной версии
<variant>Согласование бюджета

<question>Какую долю от общей стоимости составляет стабилизирующий этап?
<variant>50%
<variant>10%
<variant>20%
<variant>30%
<variant>40%

<question>На каком этапе устраняются дефекты, обнаруженные при опытной эксплуатации?
<variant>Этап внедрения
<variant>Постановочный этап
<variant>Уточняющий этап
<variant>Стабилизирующий этап
<variant>Финальный этап

<question>Что предполагает жесткое внедрение?
<variant>Строгое соблюдение стандартов и документирование каждого этапа
<variant>Гибкое распределение обязанностей
<variant>Полное доверие между сторонами
<variant>Исключение необходимости тестирования
<variant>Совместное использование прототипов

<question>Что включает в себя жесткое внедрение?
<variant>Документирование всех этапов проекта
<variant>Исключение прототипов
<variant>Упрощение анализа требований
<variant>Устранение конфликтов
<variant>Минимизацию сроков

<question>Почему легкая версия системы часто не соответствует требованиям?
<variant>Требования заказчика формулируются нечетко
<variant>Ошибки в программировании
<variant>Некорректная архитектура
<variant>Проблемы с тестированием
<variant>Низкая квалификация разработчиков

<question>Что может стать причиной конфликтов при жестком внедрении?
<variant>Нечеткость требований заказчика
<variant>Высокая стоимость проекта
<variant>Длительные сроки разработки
<variant>Недостаток документации
<variant>Сложность тестирования

<question>Что важно указать в документах для формализации?
<variant>Сроки, исполнителей и детали задач
<variant>Финансовые требования
<variant>Только исполнителей
<variant>Только цели проекта
<variant>План работы без сроков

<question>Какую задачу решают контрольные тесты?
<variant>Оценка корректности работы системы
<variant>Проверка документации
<variant>Финальное согласование бюджета
<variant>Аттестация пользователей
<variant>Обучение разработчиков

<question>Какой из этапов наиболее важен для достижения качества системы?
<variant>Стабилизирующий этап
<variant>Постановочный этап
<variant>Уточняющий этап
<variant>Этап внедрения
<variant>Анализ требований

<question>Какую долю от общей стоимости составляет этап внедрения?
<variant>10%
<variant>20%
<variant>30%
<variant>40%
<variant>50%

<question>Почему важно согласовывать контрольные тесты заранее?
<variant>Они служат критериями корректности системы
<variant>Упрощают внедрение
<variant>Уменьшают затраты
<variant>Исключают ошибки
<variant>Повышают скорость разработки

<question>Что является ключевым для достижения согласия пользователей с системой?
<variant>Разработка и тестирование прототипов
<variant>Подписание договора
<variant>Упрощение требований
<variant>Снижение затрат
<variant>Исключение этапа анализа

<question>На каком этапе разрабатывается «Руководство пользователя»?
<variant>Уточняющий этап
<variant>Постановочный этап
<variant>Стабилизирующий этап
<variant>Этап внедрения
<variant>Финальный этап

<question>Что происходит в случае выхода требований за рамки ТЗ?
<variant>Пересматривается трудоемкость/цена проекта
<variant>Требования фиксируются автоматически
<variant>Проект откладывается
<variant>Упрощаются требования
<variant>Завершается разработка

<question>Как достигается соответствие документации текущему состоянию проекта?
<variant>За счет параллельного обновления документации и разработки
<variant>Исключением прототипов
<variant>Финализацией ТЗ
<variant>Использованием готовых шаблонов
<variant>Проведением аттестации

<question>Какое из условий обязательно для приемки системы в промышленную эксплуатацию?
<variant>Соответствие системы «Руководству пользователя»
<variant>Завершение тестирования
<variant>Устранение всех дефектов
<variant>Обучение всех пользователей
<variant>Финальное согласование бюджета

<question>Какая характеристика описывает усилия, необходимые для диагностики недостатков?
<variant>Анализируемость
<variant>Устойчивость
<variant>Изменяемость
<variant>Простота внедрения
<variant>Согласованность

<question>Какая из подхарактеристик относится к мобильности ПО?
<variant>Взаимозаменяемость
<variant>Тестируемость
<variant>Понятность
<variant>Ресурсная экономичность
<variant>Стабильность

<question>Какие виды деятельности выделяет классическое управление проектами?
<variant>Операционная и проектная
<variant>Производственная и аналитическая
<variant>Творческая и операционная
<variant>Исследовательская и аналитическая
<variant>Управленческая и проектная

<question>Что является основой эффективности операционной деятельности?
<variant>Узкая специализация и повышение компетенции
<variant>Творческий подход и поиск решений
<variant>Использование нестандартных методов
<variant>Быстрая адаптация к изменениям
<variant>Внедрение инновационных технологий

<question>Какой пример относится к операционной деятельности?
<variant>Функционирование службы поддержки пользователя
<variant>Создание нового программного продукта
<variant>Разработка маркетинговой стратегии
<variant>Внедрение уникального бизнес-решения
<variant>Организация научного исследования

<question>Что является задачей проектной деятельности?
<variant>Достижение конкретной бизнес-цели
<variant>Обеспечение нормального функционирования бизнеса
<variant>Постоянное выполнение рутинных операций
<variant>Оптимизация производственного процесса
<variant>Улучшение текущих бизнес-процессов

<question>Какая основная разница между операционной и проектной деятельностью?
<variant>Операционная деятельность повторяется, а проекты уникальны
<variant>Проекты требуют меньших ресурсов
<variant>Операционная деятельность ограничена по времени
<variant>Проекты выполняются только в стабильных условиях
<variant>Операционная деятельность всегда дешевле

<question>Что нехарактерно для программного продукта?
<variant>Его невозможно увидеть в процессе создания
<variant>Он всегда оценивается по четким временным рамкам
<variant>Жизненный цикл описан в общем виде
<variant>Необходимо адаптировать процессы под тип проекта
<variant>Часто превышаются сроки и бюджет

<question>Что описывает цель проекта?
<variant>Какие задачи должны быть решены
<variant>Ограничения проекта
<variant>Допущения, связанные с рисками
<variant>Ключевые характеристики продукта
<variant>Финансовые аспекты проекта

<question>Что относится к результатам проекта?
<variant>Конкретный продукт или услуга
<variant>Процесс достижения целей
<variant>Допущения и ограничения
<variant>Инструменты, используемые в проекте
<variant>Риски, выявленные в процессе

<question>Что не является ограничением проекта?
<variant>Творческий подход команды
<variant>Сертификация продукта
<variant>Использование заданной платформы
<variant>Требования к защите информации
<variant>Установленные сроки

<question>Какой элемент добавляется к "железному треугольнику" в разработке ПО?
<variant>Приемлемое качество
<variant>Гибкость сроков
<variant>Дополнительные ресурсы
<variant>Оптимизация затрат
<variant>Стандарты документации

<question>Что определяет успешность проекта по стандарту PMBOK?
<variant>Выполнение в срок, в рамках бюджета и по спецификации
<variant>Максимизация прибыли компании
<variant>Инновационность решений
<variant>Минимизация затрат
<variant>Удовлетворенность команды

<question>Что означает "закон 4-х П"?
<variant>Процесс разработки зависит от проекта, продукта и персонала
<variant>Необходимость постоянной адаптации сроков
<variant>Увеличение бюджета при изменении сроков
<variant>Использование стандартных методов для любых проектов
<variant>Приоритетность сроков перед качеством

<question>На каком этапе жизненного цикла проекта разрабатывается его концепция?
<variant>Инициация
<variant>Планирование
<variant>Исполнение
<variant>Завершение
<variant>Мониторинг

<question>На каком этапе проводится приемо-сдаточное тестирование?
<variant>Завершение
<variant>Инициация
<variant>Исполнение
<variant>Планирование
<variant>Мониторинг

<question>Что является целью анализа компромиссов в проекте?
<variant>Найти баланс между ограничениями
<variant>Уменьшить бюджет проекта
<variant>Ускорить выполнение этапов
<variant>Повысить креативность команды
<variant>Минимизировать риски

<question>Какой из факторов влияет на выбор процесса разработки?
<variant>Количество участников проекта
<variant>Размер офиса команды
<variant>Используемая техника
<variant>Наличие финансовой поддержки
<variant>Уровень автоматизации

<question>Что обязательно нужно фиксировать на этапе завершения проекта?
<variant>Результаты и соответствие требованиям
<variant>Новые идеи команды
<variant>Дополнительные ресурсы
<variant>План будущих улучшений
<variant>Ошибки предыдущих этапов

<question>Что определяет "железный треугольник" в управлении проектами?
<variant>Время, бюджет, содержание
<variant>Команда, ресурсы, технологии
<variant>Риски, ограничения, функции
<variant>Качество, планирование, адаптация
<variant>Затраты, прибыль, инновации

<question>Какой из перечисленных этапов является завершающим в жизненном цикле проекта?
<variant>Завершение
<variant>Исполнение
<variant>Планирование
<variant>Мониторинг
<variant>Инициация

<question>Какой из факторов не влияет на выбор рыночной ниши программного продукта?
<variant>Личное мнение разработчиков
<variant>Потребности рынка
<variant>Конкурентный анализ
<variant>Уникальные особенности продукта
<variant>Требования заказчика

<question>На каком этапе происходит назначение ресурсов?
<variant>Планирование
<variant>Исполнение
<variant>Завершение
<variant>Инициация
<variant>Мониторинг

<question>Что такое среда программирования?
<variant>Программа, в которой программисты разрабатывают свои программы
<variant>Текстовый редактор для написания кода
<variant>Система автоматического тестирования
<variant>Совокупность физических устройств компьютера
<variant>Только компилятор для перевода программ

<question>Что входит в основные компоненты среды программирования?
<variant>Редактор, компилятор, отладчик
<variant>Мышь, клавиатура, монитор
<variant>Текстовые и графические редакторы
<variant>Процессор, память, накопители
<variant>Операционная система

<question>Какая задача редактора в среде программирования?
<variant>Создание и изменение исходных файлов программы
<variant>Компоновка объектных файлов
<variant>Трассировка выполнения программы
<variant>Перевод кода в машинный язык
<variant>Устранение ошибок

<question>Какую функцию выполняет компилятор?
<variant>Переводит исходный код в машинный язык
<variant>Управляет выполнением программы
<variant>Открывает текстовые файлы
<variant>Обеспечивает пошаговую трассировку
<variant>Запускает программу

<question>Чем интерпретатор отличается от компилятора?
<variant>Выполняет исходный код программы без перевода в объектный файл
<variant>Переводит программу сразу в исполняемый файл
<variant>Только проверяет наличие синтаксических ошибок
<variant>Устанавливает тактовую частоту процессора
<variant>Записывает исходный код

<question>Что делает компоновщик?
<variant>Собирает объектные файлы в исполняемый файл
<variant>Создает текстовые файлы программы
<variant>Управляет выполнением программы
<variant>Проверяет синтаксические ошибки
<variant>Генерирует машинный код

<question>Что происходит на этапе выполнения программы?
<variant>Компьютер выполняет команды программы последовательно
<variant>Компилируется исходный код программы
<variant>Проводится трассировка ошибок
<variant>Создаются исходные файлы
<variant>Оптимизируются тактовые частоты

<question>Что делает отладчик?
<variant>Помогает находить и исправлять ошибки в программе
<variant>Компилирует исходный код
<variant>Переводит текст программы в машинный язык
<variant>Создает исполняемые файлы
<variant>Выполняет программу автоматически

<question>Что такое текстовый редактор в среде программирования?
<variant>Программа для набора и редактирования исходного кода
<variant>Средство для диагностики ошибок
<variant>Утилита для выполнения программы
<variant>Программа для сборки объектных файлов
<variant>Инструмент для управления тактовой частотой

<question>Какую функцию выполняет транслятор?
<variant>Преобразует символы исходного файла в машинный код
<variant>Управляет выполнением программы
<variant>Выполняет пошаговую трассировку
<variant>Устраняет ошибки в коде
<variant>Запускает программу

<question>Что объединяет редактор, компилятор и отладчик?
<variant>Это основные компоненты среды программирования
<variant>Это текстовые редакторы
<variant>Они используются для создания аппаратных средств
<variant>Они определяют тактовую частоту процессора
<variant>Это программы для выполнения кода